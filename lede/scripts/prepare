#!/bin/bash

lede_label="$1"
lede_path="$2"
lede_rev="$3"
work_dir=$( cd "$( dirname "${BASH_SOURCE[0]}" )/../.." && pwd )
platform_dir="${work_dir}/lede"
build_dir="${work_dir}/build"
checkout_dir="${build_dir}/lede"

if [[ -z "${lede_label}" || -z "${lede_path}" || -z "${lede_rev}" ]]; then
  echo "ERROR: Usage: $0 <label> <path> <revision>"
  exit 1
fi

# Check if all utilities that we need are ready for use
for program in quilt svn git
do
  p=$(which $program)
  if [ "$p" == "" ]; then
    echo "ERROR: $program not found."
    exit 1
  fi
done

# Check for proper working directory
if [[ ! -d  ${platform_dir} ]]; then
  echo "ERROR: Invalid working directory!"
  exit 1
fi

mkdir -p ${build_dir}

# Get code source
firmware_source=$(git config --get remote.origin.url)
# Get version identifier
firmware_version=$(git describe --always)

# Now that we have everything verified, first checkout the OpenWRT repository
lede_path_name="${lede_label//\//_}"

echo "LEDE path: ${lede_path}"
echo "LEDE revision: ${lede_rev}"
echo "Checking out LEDE, this could take some time..."

rm -rf ${checkout_dir}
git clone https://git.lede-project.org/${lede_path} ${checkout_dir} || exit 1
cd ${checkout_dir}
git checkout ${lede_rev} || exit 1

echo ${lede_label} > ${checkout_dir}/.label

# Inject feeds and configurations
echo "Configuring feeds..."
echo "src-git nodewatcher https://github.com/wlanslovenija/firmware-packages-opkg.git" > ${checkout_dir}/feeds.conf
cat ${platform_dir}/feeds/${lede_path_name} >> ${checkout_dir}/feeds.conf

# Patch OpenWRT.
echo "Applying patches for LEDE base tree..."
cd ${checkout_dir}
ln -s ${platform_dir}/patches/${lede_path_name} patches
quilt push -f -a || {
  echo "ERROR: Failed to apply patches."
  exit 1
}

# Apply any patch post-apply hooks (used to fix permissions).
for patch in patches/*.patch; do
  if [ -x ${patch}.postapply ]; then
    ./${patch}.postapply
  fi
done

# Remove certain core LEDE packages as our feed overrides them. If we don't remove
# them here, they will be ignored.
override_packages_file="${platform_dir}/override/${lede_path_name}/packages"
if [ -f ${override_packages_file} ]; then
  echo "Removing base packages that are overriden by our feed..."
  for package in $(cat ${override_packages_file}); do
    echo "  ${package}"
    rm -rf ${checkout_dir}/${package}
  done
fi

# Update version file and banner
echo "git.${firmware_version}" > package/base-files/files/etc/version
echo "
 ------------------- LEDE --------------------
  source: ${firmware_source}
 version: git.${firmware_version}
 ---------------------------------------------

" > package/base-files/files/etc/banner

# Importing feeds
echo "Importing feeds..."
./scripts/feeds update -a || {
  echo "ERROR: Failed to update feeds."
  exit 1
}

# Ensure that all feeds are present
for feed in $(cat feeds.conf | awk '{print $2}'); do
  [ -d feeds/${feed} ] || {
    echo "ERROR: Feed '${feed}' is missing (failure to import feed?)."
    exit 1
  }
done

for package in $(cat ${platform_dir}/packages); do
  feed="$(echo ${package} | cut -s -d '@' -f 2)"
  package="$(echo ${package} | cut -d '@' -f 1)"

  if [ -n "${feed}" ]; then
    feed="-p ${feed}"
  fi

  ./scripts/feeds install ${feed} ${package}
done

# Preparation is now completed
echo "Preparation completed, you may now build the firmware."
