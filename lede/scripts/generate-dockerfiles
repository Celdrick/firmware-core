#!/bin/bash

template_buildsystem="
########################################################################
# WARNING: This is an automatically generated Dockerfile. DO NOT EDIT. #
########################################################################

FROM wlanslovenija/firmware-base

RUN ./lede/scripts/prepare \${branch} \${path} \${rev} && \\\\
 rm -rf .git && \\\\
 chown -R builder:builder build
"

template_stage1="
########################################################################
# WARNING: This is an automatically generated Dockerfile. DO NOT EDIT. #
########################################################################

FROM wlanslovenija/lede-buildsystem:\${branch}

RUN chown builder:builder /buildsystem/build && \\\\
 sudo -E -u builder ./lede/scripts/configure-platform \${architecture} && \\\\
 sudo -E -u builder ./lede/scripts/build-toolchain && \\\\
 sudo -E -u builder ./lede/scripts/build-imagebuilder && \\\\
 export version=\\\"\\\$(cat /buildsystem/build/lede/package/base-files/files/etc/version)\\\" && \\\\
 cd /buildsystem/build/release && \\\\
 mkdir -p /builder/imagebuilder && \\\\
 tar xf imagebuilder.tar.xz -C /builder/imagebuilder --strip-components 1 && \\\\
 mv packages /builder/packages && \\\\
 echo -n \\\"{\\\\\\\"platform\\\\\\\": \\\\\\\"lede\\\\\\\", \\\" > /builder/packages/metadata && \\\\
 echo -n \\\"\\\\\\\"architecture\\\\\\\": \\\\\\\"\${architecture}\\\\\\\", \\\" >> /builder/packages/metadata && \\\\
 echo -n \\\"\\\\\\\"version\\\\\\\": \\\\\\\"\\\${version}\\\\\\\", \\\" >> /builder/packages/metadata && \\\\
 echo -n \\\"\\\\\\\"packages\\\\\\\": \\\" >> /builder/packages/metadata && \\\\
 find /builder/packages -name Packages | xargs cat | /buildsystem/lede/tools/packages2json.py >> /builder/packages/metadata && \\\\
 echo \\\"}\\\" >> /builder/packages/metadata && \\\\
 cp /buildsystem/lede/docker/Dockerfile.runtime /builder/Dockerfile && \\\\
 { rm -rf /buildsystem 2>/dev/null || true; }

WORKDIR /builder
CMD tar cvzhf - .
"

# ------------------------------------------------------------------------

work_dir=$( cd "$( dirname "${BASH_SOURCE[0]}" )/../.." && pwd )
platform_dir="${work_dir}/lede"
docker_dir="${work_dir}/docker/lede"

echo "Generating Dockerfiles..."
rm -rf ${docker_dir}
for branch in $(cat ${platform_dir}/branches); do
  path=$(echo $branch | cut -d ':' -f 2)
  rev=$(echo $branch | cut -d ':' -f 3)
  branch=$(echo $branch | cut -d ':' -f 1)

  # Buildsystem dockerfile
  dockerfile=$(eval "echo \"${template_buildsystem}\"")
  mkdir -p ${docker_dir}/buildsystem/${branch}
  echo "${dockerfile}" > ${docker_dir}/buildsystem/${branch}/Dockerfile

  for architecture in $(cat ${platform_dir}/architectures); do
    # Stage 1 dockerfile
    dockerfile=$(eval "echo \"${template_stage1}\"")
    mkdir -p "${docker_dir}/builder-stage-1/${branch}/${architecture}"
    echo "${dockerfile}" > "${docker_dir}/builder-stage-1/${branch}/${architecture}/Dockerfile"
  done
done
