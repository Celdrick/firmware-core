Index: package/kernel/mac80211/files/regdb.txt
===================================================================
--- package/kernel/mac80211/files/regdb.txt.orig	2015-09-04 09:57:35.654866806 +0200
+++ package/kernel/mac80211/files/regdb.txt	2015-09-04 09:58:47.058863780 +0200
@@ -1,18 +1,7 @@
 # This is the world regulatory domain
 country 00:
-	(2402 - 2472 @ 40), (20)
-	# Channel 12 - 13.
-	(2457 - 2482 @ 40), (20), NO-IR
-	# Channel 14. Only JP enables this and for 802.11b only
-	(2474 - 2494 @ 20), (20), NO-IR, NO-OFDM
-	# Channel 36 - 48
-	(5170 - 5250 @ 80), (20)
-	# Channel 52 - 64
-	(5250 - 5330 @ 80), (20), NO-IR, DFS, AUTO-BW
-	# Channel 100 - 144
-	(5490 - 5730 @ 160), (20), NO-IR, DFS
-	# Channel 149 - 165
-	(5735 - 5835 @ 80), (20), NO-IR
+	(2400 - 2483 @ 40), (30)
+	(5140 - 5860 @ 40), (30)
 	# IEEE 802.11ad (60GHz), channels 1..3
 	(57240 - 63720 @ 2160), (0)
 
@@ -497,11 +486,9 @@
 	(5490 - 5730 @ 160), (24), DFS
 	(5735 - 5835 @ 80), (30)
 
-country HR: DFS-ETSI
-	(2402 - 2482 @ 40), (20)
-	(5170 - 5250 @ 80), (20), AUTO-BW
-	(5250 - 5330 @ 80), (20), DFS, AUTO-BW
-	(5490 - 5710 @ 160), (27), DFS
+country HR:
+	(2400 - 2483 @ 40), (30)
+	(5140 - 5860 @ 40), (30)
 	# 60 gHz band channels 1-4, ref: Etsi En 302 567
 	(57000 - 66000 @ 2160), (40)
 
@@ -1004,11 +991,9 @@
 	(5490 - 5730 @ 160), (24), DFS
 	(5735 - 5835 @ 80), (30)
 
-country SI: DFS-ETSI
-	(2402 - 2482 @ 40), (20)
-	(5170 - 5250 @ 80), (20), AUTO-BW
-	(5250 - 5330 @ 80), (20), DFS, AUTO-BW
-	(5490 - 5710 @ 160), (27), DFS
+country SI:
+	(2400 - 2483 @ 40), (30)
+	(5140 - 5860 @ 40), (30)
 	# 60 gHz band channels 1-4, ref: Etsi En 302 567
 	(57000 - 66000 @ 2160), (40)
 
@@ -1121,11 +1106,9 @@
 	(5490 - 5730 @ 160), (24), DFS
 	(5735 - 5835 @ 80), (30)
 
-country US: DFS-FCC
-	(2402 - 2472 @ 40), (30)
-	(5170 - 5250 @ 80), (17), AUTO-BW
-	(5250 - 5330 @ 80), (23), DFS, AUTO-BW
-	(5735 - 5835 @ 80), (30)
+country US:
+	(2400 - 2483 @ 40), (30)
+	(5140 - 5860 @ 40), (30)
 	# 60g band
 	# reference: http://cfr.regstoday.com/47cfr15.aspx#47_CFR_15p255
 	# channels 1,2,3, EIRP=40dBm(43dBm peak)
Index: package/kernel/mac80211/patches/900-regulatory-test.patch
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ package/kernel/mac80211/patches/900-regulatory-test.patch	2015-09-04 09:57:35.654866806 +0200
@@ -0,0 +1,68 @@
+--- a/drivers/net/wireless/ath/regd.c	2014-06-07 12:11:24.167784903 +0200
++++ b/drivers/net/wireless/ath/regd.c	2014-06-07 12:14:49.003777068 +0200
+@@ -51,12 +51,9 @@
+ #define ATH9K_5GHZ_5725_5850	REG_RULE(5725-10, 5850+10, 80, 0, 30,\
+ 					 NL80211_RRF_NO_IR)
+ 
+-#define ATH9K_2GHZ_ALL		ATH9K_2GHZ_CH01_11, \
+-				ATH9K_2GHZ_CH12_13, \
+-				ATH9K_2GHZ_CH14
++#define ATH9K_2GHZ_ALL		REG_RULE(2400, 2483, 40, 0, 30, 0)
+ 
+-#define ATH9K_5GHZ_ALL		ATH9K_5GHZ_5150_5350, \
+-				ATH9K_5GHZ_5470_5850
++#define ATH9K_5GHZ_ALL		REG_RULE(5140, 5860, 40, 0, 30, 0)
+ 
+ /* This one skips what we call "mid band" */
+ #define ATH9K_5GHZ_NO_MIDBAND	ATH9K_5GHZ_5150_5350, \
+@@ -80,9 +77,8 @@
+ static const struct ieee80211_regdomain ath_world_regdom_63_65 = {
+ 	.alpha2 =  "99",
+ 	REGD_RULES(
+-		ATH9K_2GHZ_CH01_11,
+-		ATH9K_2GHZ_CH12_13,
+-		ATH9K_5GHZ_NO_MIDBAND,
++		ATH9K_2GHZ_ALL,
++		ATH9K_5GHZ_ALL,
+ 	)
+ };
+ 
+@@ -90,8 +86,8 @@
+ static const struct ieee80211_regdomain ath_world_regdom_64 = {
+ 	.alpha2 =  "99",
+ 	REGD_RULES(
+-		ATH9K_2GHZ_CH01_11,
+-		ATH9K_5GHZ_NO_MIDBAND,
++		ATH9K_2GHZ_ALL,
++		ATH9K_5GHZ_ALL,
+ 	)
+ };
+ 
+@@ -99,7 +95,7 @@
+ static const struct ieee80211_regdomain ath_world_regdom_66_69 = {
+ 	.alpha2 =  "99",
+ 	REGD_RULES(
+-		ATH9K_2GHZ_CH01_11,
++		ATH9K_2GHZ_ALL,
+ 		ATH9K_5GHZ_ALL,
+ 	)
+ };
+@@ -108,8 +104,7 @@
+ static const struct ieee80211_regdomain ath_world_regdom_67_68_6A_6C = {
+ 	.alpha2 =  "99",
+ 	REGD_RULES(
+-		ATH9K_2GHZ_CH01_11,
+-		ATH9K_2GHZ_CH12_13,
++		ATH9K_2GHZ_ALL,
+ 		ATH9K_5GHZ_ALL,
+ 	)
+ };
+@@ -256,7 +251,7 @@
+ /* Frequency is one where radar detection is required */
+ static bool ath_is_radar_freq(u16 center_freq)
+ {
+-	return (center_freq >= 5260 && center_freq <= 5700);
++	return false;
+ }
+ 
+ static void ath_force_clear_no_ir_chan(struct wiphy *wiphy,
